# Example NGINX configuration with ACME support
# Load the ACME module
load_module modules/ngx_http_acme_module.so;

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$host" "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    gzip on;

    # DNS resolver - required for ACME
    resolver 8.8.8.8 1.1.1.1 valid=300s;
    resolver_timeout 5s;

    # Shared zone for ACME certificates and challenge data
    acme_shared_zone zone=acme_shared:1M;

    # Define ACME issuer (Let's Encrypt production)
    acme_issuer letsencrypt {
        uri https://acme-v02.api.letsencrypt.org/directory;
        contact mailto:security-alerts@example.com;
        state_path /etc/nginx/acme/letsencrypt;
        accept_terms_of_service;
    }

    # For staging/testing environment, uncomment below:
    # acme_issuer letsencrypt_staging {
    #     uri https://acme-staging-v02.api.letsencrypt.org/directory;
    #     contact mailto:security-alerts@example.com;
    #     state_path /etc/nginx/acme/letsencrypt_staging;
    #     accept_terms_of_service;
    # }

    # HTTPS server with ACME auto certificate
    server {
        listen 443 ssl;
        server_name example.com www.example.com;

        # Enable ACME certificate for this server
        acme_certificate letsencrypt;

        # Use ACME managed certificate and key
        ssl_certificate $acme_certificate;
        ssl_certificate_key $acme_certificate_key;

        # Certificate cache (requires nginx 1.27.4+)
        # ssl_certificate_cache max=2;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Your application configuration
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }
    }

    # HTTP server for ACME challenge and redirect
    server {
        listen 80 default_server;
        server_name _;

        # ACME module automatically handles /.well-known/acme-challenge/
        # All other HTTP traffic is redirected to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
}
