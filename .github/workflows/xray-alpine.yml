name: xray-alpine
on:
  schedule:
    - cron: '0 0 * * *'
  repository_dispatch:
    types: 'build-xray'

env:
  DOCKER_REPO_NAME: rookiezoe/xray

jobs:
  get_env:
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.set_outputs.outputs.LATEST_TAG }}
      XRAY_VERSION: ${{ steps.set_outputs.outputs.XRAY_VERSION }}
    steps:
      - id: set_outputs
        env:
          DEBIAN_FRONTEND: noninteractive
        name: Set outputs
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install jq git
          export LATEST_TAG=$(echo -n $(curl -s "https://registry.hub.docker.com/v1/repositories/${DOCKER_REPO_NAME}/tags" | jq -r 'sort_by(.name) | reverse | .[1].name'))
          export XRAY_VERSION=$(echo -n $(curl -sI https://github.com/XTLS/Xray-core/releases/latest | grep location: | awk -F/releases/tag/v '{print $2}'))
          echo ::set-output name=LATEST_TAG::$LATEST_TAG
          echo ::set-output name=XRAY_VERSION::$XRAY_VERSION

  publish:
    if: needs.get_env.outputs.LATEST_TAG != needs.get_env.outputs.XRAY_VERSION
    runs-on: ubuntu-latest
    needs: get_env
    steps:
      - uses: actions/checkout@master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish to DockerHub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKER_REPO_NAME }}:latest,${{ env.DOCKER_REPO_NAME }}:${{ needs.get_env.outputs.XRAY_VERSION }}
          context: ./xray
          build-args: |
            XRAY_VERSION=${{ needs.get_env.outputs.XRAY_VERSION }}
