name: nginx-alpine
on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - master

env:
  DOCKER_REPO_NAME: rookiezoe/nginx

jobs:
  get_env:
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.set_outputs.outputs.LATEST_TAG }}
      NGINX_VERSION: ${{ steps.set_outputs.outputs.NGINX_VERSION }}
      NCHAN_LATEST_TAR: ${{ steps.set_outputs.outputs.NCHAN_LATEST_TAR }}
      HEADERS_MORE_LATEST_TAR: ${{ steps.set_outputs.outputs.HEADERS_MORE_LATEST_TAR }}
    steps:
      - id: set_outputs
        env:
          DEBIAN_FRONTEND: noninteractive
        name: Set outputs
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install jq git
          export $LATEST_TAG=$(echo -n $(curl -s "https://registry.hub.docker.com/v1/repositories/${DOCKER_REPO_NAME}/tags" | jq -r 'sort_by(.name) | reverse | .[1].name'))
          git clone https://github.com/nginx/nginx.git $GITHUB_WORKSPACE/tmp/nginx
          cd $GITHUB_WORKSPACE/tmp/nginx
          export NGINX_VERSION=$(echo -n $(git describe --tags $(git rev-list --tags --max-count=1) | cut -d "-" -f2))
          cd $GITHUB_WORKSPACE
          git clone https://github.com/slact/nchan.git $GITHUB_WORKSPACE/tmp/nchan
          cd $GITHUB_WORKSPACE/tmp/nchan
          export NCHAN_LATEST_TAR="https://github.com/slact/nchan/archive/$(echo -n $(git describe --tags $(git rev-list --tags --max-count=1))).tar.gz"
          cd $GITHUB_WORKSPACE
          git clone https://github.com/openresty/headers-more-nginx-module.git $GITHUB_WORKSPACE/tmp/headers-more-nginx-module
          cd $GITHUB_WORKSPACE/tmp/headers-more-nginx-module
          export HEADERS_MORE_LATEST_TAR="https://github.com/openresty/headers-more-nginx-module/archive/$(echo -n $(git describe --tags $(git rev-list --tags --max-count=1))).tar.gz"
          cd $GITHUB_WORKSPACE
          echo ::set-output name=LATEST_TAG::$LATEST_TAG
          echo ::set-output name=NGINX_VERSION::$NGINX_VERSION
          echo ::set-output name=NCHAN_LATEST_TAR::$NCHAN_LATEST_TAR
          echo ::set-output name=HEADERS_MORE_LATEST_TAR::$HEADERS_MORE_LATEST_TAR

  publish:
    if: needs.get_env.outputs.LATEST_TAG != needs.get_env.outputs.NGINX_VERSION
    runs-on: ubuntu-latest
    needs: get_env
    steps:
      - uses: actions/checkout@master
      - name: Publish to DockerHub
        uses: docker/build-push-action@v1
        with:
          name: ${{ env.DOCKER_REPO_NAME }}
          tags: latest,${{ needs.get_env.outputs.NGINX_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          build_args: NCHAN_LATEST_TAR=${{ needs.get_env.outputs.NCHAN_LATEST_TAR }},HEADERS_MORE_LATEST_TAR=${{ needs.get_env.outputs.HEADERS_MORE_LATEST_TAR }}
          dockerfile: ./nginx/Dockerfile
