name: nginx-alpine
on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - master

env:
  DOCKER_REPO_NAME: rookiezoe/nginx

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set env
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install jq
          export latest_tag=$(echo -n $(curl -s "https://registry.hub.docker.com/v1/repositories/${DOCKER_REPO_NAME}/tags" | jq -r 'sort_by(.name) | reverse | .[1].name'))
          export NGINX_VERSION=$(echo -n $(curl -u $GITHUB_USERNAME:$GITHUB_TOKEN -s https://api.github.com/repos/nginx/nginx/tags | jq -r 'sort_by(.name) | last | .name | split("release-") | .[1]'))
          echo ::set-env name=NGINX_VERSION::$NGINX_VERSION
          echo ::set-env name=NCHAN_LATEST_TAR::$(echo -n $(curl -u $GITHUB_USERNAME:$GITHUB_TOKEN -s https://api.github.com/repos/slact/nchan/tags | jq -r 'sort_by(.name) | last | .tarball_url'))
          echo ::set-env name=HEADERS_MORE_LATEST_TAR::$(echo -n $(curl -u $GITHUB_USERNAME:$GITHUB_TOKEN -s https://api.github.com/repos/openresty/headers-more-nginx-module/tags | jq -r 'sort_by(.name) | last | .tarball_url'))
          [[ $NGINX_VERSION == $latest_tag ]]; exit $?

      - name: Version not change
        if: success()
        run: |
          echo "NGINX_VERSION=$NGINX_VERSION"
          echo "NCHAN_LATEST_TAR=$NCHAN_LATEST_TAR"
          echo "HEADERS_MORE_LATEST_TAR=$HEADERS_MORE_LATEST_TAR"
          echo "Nginx Version is not change, abort."
          exit 0;

      - name: Publish to DockerHub
        uses: elgohr/Publish-Docker-Github-Action@master
        if: failure()
        with:
          name: ${{ env.DOCKER_REPO_NAME }}
          tags: 'latest,${{ env.NGINX_VERSION }}'
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          buildargs: NCHAN_LATEST_TAR,HEADERS_MORE_LATEST_TAR
          dockerfile: ./nginx/Dockerfile
